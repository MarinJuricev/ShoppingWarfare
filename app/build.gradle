plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.kapt"
    id "dagger.hilt.android.plugin"
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
}

android {
    compileSdk 33
    buildToolsVersion = "33"

    namespace 'com.marinj.shoppingwarfare'

    defaultConfig {
        applicationId "com.marinj.shoppingwarfare"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.activity:activity-compose:$compose_activity_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.compiler:compiler:$compose_compiler_version"
    implementation "androidx.navigation:navigation-compose:$compose_navigation_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_navigation_animation_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_permission_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt("androidx.room:room-compiler:$room_version")

    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint_layout_version"

    implementation "androidx.core:core-splashscreen:$core_splash_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "androidx.camera:camera-camera2:$camera_version"
    implementation "androidx.camera:camera-lifecycle:$camera_version"
    implementation "androidx.camera:camera-view:$camera_version"

    implementation "io.coil-kt:coil-compose:$coil_version"

    implementation "org.jetbrains.kotlinx:kotlinx-datetime:$date_time_version"

    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version"

    implementation "io.arrow-kt:arrow-core:$arrow_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
}

//TODO Check after each dependency update do we still need these compilerArguments
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=androidx.compose.material.ExperimentalMaterialApi"
        freeCompilerArgs += "-opt-in=androidx.compose.animation.ExperimentalAnimationApi"
        freeCompilerArgs += "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"
        freeCompilerArgs += "-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
}
