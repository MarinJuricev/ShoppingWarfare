plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.kapt"
    id "dagger.hilt.android.plugin"
    id "com.google.gms.google-services"
    id "org.jetbrains.kotlin.plugin.serialization"
}

android {
    compileSdk libs.versions.compileSdk.get().toInteger()
    buildToolsVersion = libs.versions.buildTools.get()

    namespace 'com.marinj.shoppingwarfare'

    defaultConfig {
        applicationId "com.marinj.shoppingwarfare"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.activity.compose

    implementation libs.material

    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.util
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.compose.animation
    implementation libs.androidx.compose.foundation
    implementation libs.androidx.compose.compiler
    debugImplementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.navigation.compose

    implementation libs.accompanist.navigation.animation
    implementation libs.accompanist.permissions

    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.hilt.navigation.compose


    implementation libs.room.runtime
    implementation libs.room.ktx
    kapt libs.room.compiler

    implementation libs.constraintlayout.compose

    implementation libs.splashscreen

    implementation libs.timber
    implementation libs.camera2
    implementation libs.camera.lifecycle
    implementation libs.camera.view

    implementation libs.coil.compose

    implementation libs.kotlinx.datetime

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics
    implementation libs.firebase.firestore
    implementation libs.firebase.perf

    implementation libs.kotlinx.serialization.json

    implementation libs.arrow.core

    testImplementation libs.junit
    testImplementation libs.truth
    testImplementation libs.turbine
    testImplementation libs.kotlinx.coroutines.test
}

//TODO Check after each dependency update do we still need these compilerArguments
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=androidx.compose.material.ExperimentalMaterialApi"
        freeCompilerArgs += "-opt-in=androidx.compose.animation.ExperimentalAnimationApi"
        freeCompilerArgs += "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"
        freeCompilerArgs += "-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
}
